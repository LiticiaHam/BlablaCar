version: "3"
name: ipssi-cluster

services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - "9870:9870"

  datanode-1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: datanode-1
    ports:
      - "9864:9864"
    volumes:
      - hadoop_datanode-1:/hadoop/dfs/data
    depends_on:
      - namenode
    env_file:
      - ./hadoop.env

  datanode-2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: datanode-2
    ports:
      - "9865:9864"
    volumes:
      - hadoop_datanode-2:/hadoop/dfs/data
    depends_on:
      - namenode
    env_file:
      - ./hadoop.env

  datanode-3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: datanode-3
    ports:
      - "9866:9864"
    volumes:
      - hadoop_datanode-3:/hadoop/dfs/data
    depends_on:
      - namenode
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: resourcemanager
    depends_on:
      - namenode
      - datanode-1
      - datanode-2
      - datanode-3
    env_file:
      - ./hadoop.env
    ports:
      - "8088:8088"

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: nodemanager
    ports:
      - "8042:8042"
    depends_on:
      - namenode
      - datanode-1
      - datanode-2
      - datanode-3
    env_file:
      - ./hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: historyserver
    ports:
      - "8188:8188"
    depends_on:
      - namenode
      - datanode-1
      - datanode-2
      - datanode-3
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

  # Spark services
  spark-master:
    image: bitnami/spark:3.2.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "4040:4040"
      - "7077:7077"
      - "8080:8080"
  
  spark-worker-1:
    image: bitnami/spark:3.2.1
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  spark-worker-2:
    image: bitnami/spark:3.2.1
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  # Jupyter notebook
  jupyter:
    build:
      context: .
      dockerfile: ./compose/jupyter/Dockerfile
    container_name: jupyter
    volumes:
      - .:/app
    ports:
      - "8888:8888"
      
  loader:
    build:
      context: .
      dockerfile: ./compose/loader/Dockerfile
    container_name: loader
    volumes:
      - .:/app


volumes:
  hadoop_namenode:
  hadoop_datanode-1:
  hadoop_datanode-2:
  hadoop_datanode-3:
  hadoop_historyserver: